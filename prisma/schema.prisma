// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  role          String         @default("player")
  username      String         @unique
  password      String
  refreshToken  String?
  placements    Placement[]
  shots         Shot[]
  winnerInGames Game[]         @relation("winners_in_games")
  games         UsersInGames[]

  @@map("users")
}

model Game {
  id         Int            @id @default(autoincrement())
  stage      String         @default("placement")
  winner     User?          @relation("winners_in_games", fields: [winnerId], references: [id])
  winnerId   Int?           @map("winner_id")
  shots      Shot[]
  placements Placement[]
  users      UsersInGames[]

  @@map("games")
}

model UsersInGames {
  user           User    @relation(fields: [userId], references: [id])
  userId         Int     @map("user_id")
  game           Game    @relation(fields: [gameId], references: [id])
  gameId         Int     @map("game_id")
  isFirstShooter Boolean @map("is_first_shooter")

  @@id([userId, gameId])
}

model Shot {
  id     Int  @id @default(autoincrement())
  game   Game @relation(fields: [gameId], references: [id])
  gameId Int  @map("game_id")
  user   User @relation(fields: [userId], references: [id])
  userId Int  @map("user_id")
  cell   Int  @default(-1)

  @@map("shots")
}

model Ship {
  id         Int         @id @default(autoincrement())
  name       String      @unique
  length     Int
  rules      Rule[]
  placements Placement[]

  @@map("ships")
}

model Rule {
  id       Int  @id @default(autoincrement())
  ship     Ship @relation(fields: [shipId], references: [id])
  shipId   Int  @map("ship_id")
  quantity Int

  @@map("rules")
}

model Placement {
  id     Int    @id @default(autoincrement())
  game   Game   @relation(fields: [gameId], references: [id])
  gameId Int    @map("game_id")
  ship   Ship   @relation(fields: [shipId], references: [id])
  shipId Int    @map("sheep_id")
  user   User   @relation(fields: [userId], references: [id])
  userId Int    @map("user_id")
  cells  Cell[]

  @@map("placement")
}

model Cell {
  id          Int       @id @default(autoincrement())
  placement   Placement @relation(fields: [placementId], references: [id], onDelete: Cascade)
  placementId Int       @map("placement_id")
  cell        Int       @default(-1)
  cellType    String    @default("taken") @map("cell_type")

  @@map("cells")
}
