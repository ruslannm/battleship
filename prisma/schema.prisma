// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id           Int         @id @default(autoincrement())
  role         String      @default("player")
  username     String      @unique
  password     String
  refreshToken String?
  Game         Game[]
  Placement    Placement[]
  Log          Log[]

  @@map("users")
}

model Game {
  id         Int         @id @default(autoincrement())
  stage      String      @default("placement")
  User       User        @relation(fields: [userId], references: [id])
  userId     Int         @map("user_id")
  logs       Log[]
  placements Placement[]

  @@map("games")
}

model Log {
  id     Int  @id @default(autoincrement())
  Game   Game @relation(fields: [gameId], references: [id])
  gameId Int  @map("game_id")
  User   User @relation(fields: [userId], references: [id])
  userId Int  @map("user_id")
  cell   Int  @default(-1)

  @@map("logs")
}

model Ship {
  id        Int         @id @default(autoincrement())
  name      String      @unique
  length    Int
  Rule      Rule[]
  Placement Placement[]

  @@map("ships")
}

model Rule {
  id       Int  @id @default(autoincrement())
  Ship     Ship @relation(fields: [shipId], references: [id])
  shipId   Int  @map("ship_id")
  quantity Int

  @@map("rules")
}

model Placement {
  id               Int               @id @default(autoincrement())
  Game             Game              @relation(fields: [gameId], references: [id])
  gameId           Int               @map("game_id")
  Ship             Ship              @relation(fields: [shipId], references: [id])
  shipId           Int               @map("sheep_id")
  User             User              @relation(fields: [userId], references: [id])
  userId           Int               @map("user_id")
  TakenCells       TakenCell[]
  SpaceAroundCells SpaceAroundCell[]

  @@map("placement")
}

model TakenCell {
  id          Int       @id @default(autoincrement())
  Placement   Placement @relation(fields: [placementId], references: [id], onDelete: Cascade)
  placementId Int       @map("placement_id")
  cell        Int       @default(-1)

  @@map("taken_cells")
}

model SpaceAroundCell {
  id          Int       @id @default(autoincrement())
  Placement   Placement @relation(fields: [placementId], references: [id], onDelete: Cascade)
  placementId Int       @map("placement_id")
  cell        Int       @default(-1)

  @@map("space_around_cells")
}
